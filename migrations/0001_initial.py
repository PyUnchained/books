# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2019-01-29 15:58
from __future__ import unicode_literals

import books.models
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('code', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=120)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AccountSubType',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=300, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AccountType',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=300, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
            ],
            options={
                'verbose_name_plural': 'Branches',
            },
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('code', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='JournalCreationRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, null=True)),
                ('preset', models.CharField(choices=[('TB', 'Trial Balance'), ('BS', 'Balance Sheet'), ('CB', 'Cash Book'), ('PL', 'Trading, Profit & Loss'), ('T', 'Generic T-Account')], max_length=2, null=True)),
                ('date_from', models.DateField(default=books.models.year_ago)),
                ('date_to', models.DateField(default=books.models.today)),
                ('multi_column', models.BooleanField(default=False)),
                ('latest_pdf', models.FileField(blank=True, null=True, upload_to='journal_pdfs')),
                ('default', models.BooleanField(default=False, editable=False)),
                ('include_credit_from', models.ManyToManyField(blank=True, help_text='Accounts from which to extract credit entries.', related_name='credit_included', to='books.Account')),
                ('include_debt_from', models.ManyToManyField(blank=True, help_text='Accounts from which to extract debt entries.', related_name='debt_included', to='books.Account')),
                ('reversed_credit_entries', models.ManyToManyField(blank=True, help_text='Reversed entries will appear on the debit side of the journal.', related_name='reversed_credit_entries', to='books.Account')),
                ('reversed_debit_entries', models.ManyToManyField(blank=True, help_text='Reversed entries will appear on the credit side of the journal.', related_name='reversed_debit_entries', to='books.Account')),
            ],
            options={
                'verbose_name': 'Posting Rule',
                'verbose_name_plural': 'Posting Rules',
            },
        ),
        migrations.CreateModel(
            name='JournalEntry',
            fields=[
                ('code', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('term', models.FloatField(help_text='In Days', null=True)),
                ('date', models.DateField(null=True)),
                ('currency', models.CharField(choices=[('USD', 'USD')], default='USD', max_length=3, null=True)),
                ('details', models.TextField(blank=True, max_length=2000, null=True)),
                ('approved', models.BooleanField(default=False)),
                ('credit_acc', models.ManyToManyField(related_name='credit_entry', to='books.Account', verbose_name='credit')),
                ('credit_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='credit_branch', to='books.Branch', verbose_name='branch')),
                ('debit_acc', models.ManyToManyField(related_name='debit_entry', to='books.Account', verbose_name='debit')),
                ('debit_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='debit_branch', to='books.Branch', verbose_name='branch')),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
            },
        ),
        migrations.CreateModel(
            name='JournalEntryAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('D', 'Debit'), ('C', 'Credit')], max_length=1)),
                ('account_type', models.ManyToManyField(blank=True, help_text='Choose one of account type or specific account.', to='books.AccountType')),
                ('accounts', models.ManyToManyField(blank=True, help_text='Choose one of account type or specific account.', to='books.Account', verbose_name='Specific account')),
            ],
        ),
        migrations.CreateModel(
            name='JournalEntryRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('allow_single_entry', models.BooleanField(default=False, help_text='If selected, system will no longer force debit and credit totals to match.')),
                ('display_template', models.TextField(blank=True, max_length=2000, null=True)),
            ],
            options={
                'verbose_name': 'Transaction Definition',
                'verbose_name_plural': 'Transaction Definitions',
            },
        ),
        migrations.CreateModel(
            name='OpexaBooksSystem',
            fields=[
                ('system_code', models.CharField(default=uuid.uuid4, max_length=2000, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Settlement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('term', models.IntegerField(default=90)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.Account')),
            ],
        ),
        migrations.CreateModel(
            name='SingleEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(blank=True, choices=[('D', 'Debit'), ('C', 'Credit')], max_length=1)),
                ('value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('account', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='books.Account')),
                ('journal_entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='books.JournalEntry')),
            ],
            options={
                'verbose_name_plural': 'Single Entries',
                'ordering': ['-journal_entry__date'],
            },
        ),
        migrations.CreateModel(
            name='TermSheet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=120)),
                ('interest_method', models.CharField(choices=[('S', 'Simple'), ('C', 'Compound')], default='S', max_length=2)),
                ('last_modified', models.DateTimeField(auto_now=True, null=True)),
                ('date_issued', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('buffer_days', models.IntegerField(default=7, verbose_name='Buffer')),
                ('max_value', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Max Value ($)')),
                ('min_value', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Min Value ($)')),
                ('establishment_fee_rate', models.DecimalField(decimal_places=4, max_digits=7, verbose_name='Establishment Fee (%)')),
                ('roll_over_fee_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True, verbose_name='Rollover Fee (%)')),
                ('default_fee_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True, verbose_name='Default Fee (%)')),
                ('discount_rate', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Monthly Discount Rate (%)')),
                ('rollover_discount_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Monthly Rollover Discount Rate (%)')),
                ('default_discount_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Monthly Default Discount Rate (%)')),
                ('pdf_version', models.FileField(blank=True, null=True, upload_to='pdf_termsheets/')),
            ],
            options={
                'verbose_name': 'Term Sheet',
                'verbose_name_plural': 'Term Sheets',
            },
        ),
        migrations.CreateModel(
            name='Upload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200)),
                ('file', models.FileField(upload_to='upload_docs')),
            ],
        ),
        migrations.AddField(
            model_name='termsheet',
            name='guarantee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ts_guarantee', to='books.Upload'),
        ),
        migrations.AddField(
            model_name='termsheet',
            name='recourse_measures',
            field=models.ManyToManyField(blank=True, related_name='ts_recourse', to='books.Upload'),
        ),
        migrations.AddField(
            model_name='termsheet',
            name='security',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ts_security', to='books.Upload'),
        ),
        migrations.AddField(
            model_name='settlement',
            name='term_sheet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.TermSheet'),
        ),
        migrations.AddField(
            model_name='journalentryrule',
            name='term_sheet',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='books.TermSheet'),
        ),
        migrations.AddField(
            model_name='journalentryaction',
            name='rule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.JournalEntryRule'),
        ),
        migrations.AddField(
            model_name='journalentryaction',
            name='sub_type',
            field=models.ManyToManyField(blank=True, to='books.AccountSubType'),
        ),
        migrations.AddField(
            model_name='journalentry',
            name='rule',
            field=models.ForeignKey(blank=True, help_text='Please select a rule, then save and continue.', null=True, on_delete=django.db.models.deletion.CASCADE, to='books.JournalEntryRule'),
        ),
        migrations.AddField(
            model_name='journal',
            name='rule',
            field=models.ForeignKey(blank=True, help_text='Custom user defined rule.', null=True, on_delete=django.db.models.deletion.CASCADE, to='books.JournalCreationRule'),
        ),
        migrations.AddField(
            model_name='account',
            name='account_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='books.AccountType'),
        ),
        migrations.AddField(
            model_name='account',
            name='parent',
            field=models.ForeignKey(blank=True, help_text='Describes the account under which this particular one is grouped.', null=True, on_delete=django.db.models.deletion.CASCADE, to='books.Account', verbose_name='Grouped under'),
        ),
        migrations.AddField(
            model_name='account',
            name='sub_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='books.AccountSubType'),
        ),
    ]
